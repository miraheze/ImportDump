{
	"name": "ImportDump",
	"author": "Universal Omega",
	"url": "https://github.com/miraheze/ImportDump",
	"descriptionmsg": "importdump-desc",
	"namemsg": "importdump-extensionname",
	"license-name": "GPL-3.0-or-later",
	"type": "specialpage",
	"requires": {
		"MediaWiki": ">= 1.41.0"
	},
	"MessagesDirs": {
		"ImportDump": [
			"i18n"
		]
	},
	"ExtensionMessagesFiles": {
		"ImportDumpAliases": "ImportDumpAliases.php"
	},
	"AutoloadNamespaces": {
		"Miraheze\\ImportDump\\": "includes/"
	},
	"TestAutoloadNamespaces": {
		"Miraheze\\ImportDump\\Tests\\": "tests/phpunit/",
		"Miraheze\\ImportDump\\Tests\\Unit\\": "tests/phpunit/unit/"
	},
	"JobClasses": {
		"ImportDumpJob": {
			"class": "Miraheze\\ImportDump\\Jobs\\ImportDumpJob",
			"services": [
				"ConfigFactory",
				"DBLoadBalancerFactory",
				"JobQueueGroupFactory",
				"ImportDumpHookRunner",
				"ImportDumpRequestManager",
				"WikiImporterFactory"
			],
			"needsPage": false
		},
		"ImportDumpNotifyJob": {
			"class": "Miraheze\\ImportDump\\Jobs\\ImportDumpNotifyJob",
			"services": [
				"ConfigFactory",
				"ImportDumpRequestManager",
				"UserFactory"
			],
			"needsPage": false
		}
	},
	"GroupPermissions": {
		"user": {
			"request-import": true
		}
	},
	"AvailableRights": [
		"handle-import-request-interwiki",
		"handle-import-requests",
		"request-import",
		"view-private-import-requests"
	],
	"LogActionsHandlers": {
		"importdump/*": "LogFormatter",
		"importdumpprivate/*": "LogFormatter"
	},
	"LogHeaders": {
		"importdump": "importdump-log-header",
		"importdumpprivate": "importdumpprivate-log-header"
	},
	"LogNames": {
		"importdump": "importdump-log-name",
		"importdumpprivate": "importdumpprivate-log-name"
	},
	"LogTypes": [
		"importdump",
		"importdumpprivate"
	],
	"LogRestrictions": {
		"importdumpprivate": "view-private-import-requests"
	},
	"ActionFilteredLogs": {
		"importdump": {
			"interwiki": [
				"interwiki"
			],
			"request": [
				"request"
			],
			"started": [
				"started"
			],
			"statusupdate": [
				"statusupdate"
			]
		},
		"importdumpprivate": {
			"interwiki": [
				"interwiki"
			],
			"request": [
				"request"
			],
			"started": [
				"started"
			],
			"statusupdate": [
				"statusupdate"
			]
		}
	},
	"SpecialPages": {
		"RequestImport": {
			"class": "Miraheze\\ImportDump\\Specials\\SpecialRequestImport",
			"services": [
				"DBLoadBalancerFactory",
				"MimeAnalyzer",
				"PermissionManager",
				"RepoGroup",
				"UserFactory"
			],
			"optional_services": [
				"CreateWikiHookRunner"
			]
		},
		"RequestImportQueue": {
			"class": "Miraheze\\ImportDump\\Specials\\SpecialRequestImportQueue",
			"services": [
				"DBLoadBalancerFactory",
				"ImportDumpRequestManager",
				"PermissionManager",
				"UserFactory"
			]
		}
	},
	"Hooks": {
		"BeforeCreateEchoEvent": {
			"handler": "Main"
		},
		"GetAllBlockActions": {
			"handler": "Main"
		},
		"LoadExtensionSchemaUpdates": {
			"handler": "Installer"
		},
		"LoginFormValidErrorMessages": {
			"handler": "Main"
		},
		"UserGetReservedNames": {
			"handler": "Main"
		}
	},
	"HookHandlers": {
		"Installer": {
			"class": "Miraheze\\ImportDump\\Hooks\\Handlers\\Installer"
		},
		"Main": {
			"class": "Miraheze\\ImportDump\\Hooks\\Handlers\\Main",
			"services": [
				"ConfigFactory"
			]
		}
	},
	"ResourceModules": {
		"ext.importdump.oouiform": {
			"scripts": "ext.importdump.oouiform.ooui.js",
			"dependencies": [
				"mediawiki.storage",
				"oojs-ui-widgets"
			]
		},
		"ext.importdump.oouiform.styles": {
			"styles": "ext.importdump.oouiform.ooui.less"
		}
	},
	"ResourceFileModulePaths": {
		"localBasePath": "modules",
		"remoteExtPath": "ImportDump/modules"
	},
	"config": {
		"ImportDumpCentralWiki": {
			"value": "",
			"description": "If set, only allow users to request import dumps on this wiki."
		},
		"ImportDumpEnableAutomatedJob": {
			"value": false,
			"description": "Whether to enable a job where a reviewer just has to 'approve' an import and job handles everything else. You can use the ImportDumpJobGetFile hook to manipulate how the job gets the XML file."
		},
		"ImportDumpHelpUrl": {
			"value": "",
			"description": "Full URL. If set, adds a help URL to Special:RequestImport."
		},
		"ImportDumpInterwikiMap": {
			"value": [],
			"description": "A mapping of 'domain => interwiki prefix' for multi-level interwiki prefix generation for --username-prefix."
		},
		"ImportDumpScriptCommand": {
			"value": "php {IP}/maintenance/importDump.php --wiki={wiki} --username-prefix=\"{username-prefix}\" {file-path}",
			"description": "Generated maintenance script command to use. If $wgImportDumpEnableAutomatedJob is enabled, this is not displayed unless the status is 'failed'."
		},
		"ImportDumpUsersNotifiedOnAllRequests": {
			"value": [],
			"description": "Array of usernames to send email notifications to for all requests. Users listed here must have a verified email address on their account. This doesn't do anything if the Echo extension is not installed."
		},
		"ImportDumpUsersNotifiedOnFailedImports": {
			"value": [],
			"description": "Array of usernames to send email notifications to for failed imports. Users listed here must have a verified email address on their account. This doesn't do anything if the Echo extension is not installed or if $wgImportDumpEnableAutomatedJob is not enabled."
		}
	},
	"ConfigRegistry": {
		"ImportDump": "MediaWiki\\Config\\GlobalVarConfig::newInstance"
	},
	"DefaultUserOptions": {
		"echo-subscriptions-email-importdump-import-failed": true,
		"echo-subscriptions-email-importdump-new-request": true,
		"echo-subscriptions-email-importdump-request-comment": true,
		"echo-subscriptions-email-importdump-request-status-update": true,
		"echo-subscriptions-web-importdump-request-comment": true,
		"echo-subscriptions-web-importdump-request-status-update": true
	},
	"RateLimits": {
		"request-import": {
			"user": [
				5,
				60
			]
		}
	},
	"ServiceWiringFiles": [
		"includes/ServiceWiring.php"
	],
	"manifest_version": 2
}
